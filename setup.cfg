[metadata]
name = concrete-datastore
version = attr: concrete_datastore.__version__
author = Netsach
author_email = contact@netsach.org
description = A highly versatile REST Datastore
long_description = file: README.md
long_description_content_type = text/markdown
license = GNU GENERAL PUBLIC LICENSE Version 3
license-file = LICENSE
home-page = https://concrete-datastore.com/
project_urls =
    Bug Tracker = https://github.com/Netsach/concrete-datastore/issues
    Documentation = https://concrete-datastore.netsach.org/en/latest/
    Source Code = https://github.com/Netsach/concrete-datastore/
    Tests Coverage = https://codecov.io/gh/Netsach/concrete-datastore
classifiers =
    Programming Language :: Python :: 3.6
    Programming Language :: Python :: 3.7
    Programming Language :: Python :: 3.8

[options]
packages = find:
include_package_data = true
zip_safe = false
install_requires =
    # Django
    Django>=3.2,<3.3
    django-cors-headers>=3.10.0,<4
    django-extensions>=3.1.3,<4
    django-filter>=2.1.0,<3
    django-otp>=1.1.4,<2
    djangorestframework>=3.12.4,<3.13
    djangorestframework-gis>=0.17.0,<0.18.0
    drf-extra-fields>=3.0.4,<4
    social-auth-app-django>=5.0.0,<6.0
    social-auth-core>=4.1.0,<5.0
    # DB Postgres
    psycopg2-binary>=2.8.1,<2.9
    # Utils
    concrete-mailer>=2.18.0,<3
    pendulum>=2.0,<3
    Pillow>=8,<9
    pytz>=2018.5
    requests>=2.13.0,<3
    pyyaml>=5.1.2,<6
    uritemplate>=3.0.0,<4
    # Datamodel parser
    six>=1.12,<2
    python-slugify>=3.0.3,<4
    # Plugins
    celery>=5.3.1,<6
    redis>=4.6,<5
    tenacity>=8.0.1,<9
    # Fix importli package to a version prior to 5.0.0 to avoid error AttributeError: 'EntryPoint' object has no attribute 'get'
    importlib-metadata<5
    qrcode>=7.3.1,<8

[options.entry_points]
console_scripts =
    concrete-datastore = development.cli:django
    django = development.cli:django

[options.extras_require]
docs=
    mkdocs>=1.0.4,<2
    mkdocs-material>=4.4.3,<4.5
dev =
    ipython
    django-debug-toolbar
tests =
    mock
    pytest-django
    pytest-cov
    pytest
    codecov
security =
    bandit
quality =
    pylint>=2.13.9,<2.14
    black
full=
    ipython
    django-debug-toolbar
    mock
    pytest-django
    pytest-cov
    pytest
    codecov
    bandit
    pylint>=2.13.9,<2.14
    black

[coverage:report]
# With regex
exclude_lines =
    # Have to re-enable the standard pragma
    pragma: no cover
    skip-test-coverage
    # Custom for block
    PragmaContextNoCover

    # Don't complain about missing debug-only code:
    def __repr__
    if self\.debug
    if settings\.DEBUG

    # Don't complain if tests don't hit defensive assertion code:
    raise AssertionError
    raise NotImplementedError
    raise RuntimeError

    # Don't complain if non-runnable code isn't run:
    if 0:
    if __name__ == .__main__.:

[coverage:run]
omit =
    */tests/*

include =
    *concrete_datastore*


[coverage:html]
title = concrete-datastore - Code coverage
directory = ./tests/coverage/
